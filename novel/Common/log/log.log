2019-10-14 13:07:30 INFO  [background-preinit] org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) - HV000001: Hibernate Validator 6.0.17.Final
2019-10-14 13:07:31 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d4d32ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:07:31 INFO  [main] org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:648) - No active profile set, falling back to default profiles: default
2019-10-14 13:07:31 WARN  [main] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:131) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-10-14 13:07:31 INFO  [main] org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=11fa40f2-1067-366d-93b8-d86320dec99e
2019-10-14 13:07:31 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d4d32ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:07:32 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 1110 (http)
2019-10-14 13:07:32 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 989 ms
2019-10-14 13:07:32 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:07:32 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:07:32 INFO  [main] com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@a518813
2019-10-14 13:07:32 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2019-10-14 13:07:32 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2019-10-14 13:07:33 WARN  [main] org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120) - No spring.application.name found, defaulting to 'application'
2019-10-14 13:07:33 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:07:33 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:07:33 INFO  [main] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
2019-10-14 13:07:33 INFO  [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:365) - Initializing Eureka in region us-east-1
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:368) - Client configured to neither register nor query for data.
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:381) - Discovery Client initialized at timestamp 1571029653844 with initial instances count: 0
2019-10-14 13:07:33 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:63) - Initializing ...
2019-10-14 13:07:33 WARN  [main] com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:155) - The replica size seems to be empty. Check the route 53 DNS Registry
2019-10-14 13:07:33 INFO  [main] com.netflix.eureka.registry.AbstractInstanceRegistry.initRemoteRegionRegistry(AbstractInstanceRegistry.java:151) - Finished initializing remote region registries. All known remote regions: []
2019-10-14 13:07:33 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:70) - Initialized
2019-10-14 13:07:33 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-10-14 13:07:33 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UNKNOWN with eureka with status UP
2019-10-14 13:07:33 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:110) - Setting the eureka configuration..
2019-10-14 13:07:33 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:115) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019-10-14 13:07:33 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:129) - Eureka environment value eureka.environment is not set, defaulting to test
2019-10-14 13:07:33 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:188) - isAws returned false
2019-10-14 13:07:33 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:153) - Initialized server context
2019-10-14 13:07:33 INFO  [Thread-17] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:241) - Got 1 instances from neighboring DS node
2019-10-14 13:07:33 INFO  [Thread-17] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:242) - Renew threshold is: 1
2019-10-14 13:07:33 INFO  [Thread-17] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:253) - Changing status to UP
2019-10-14 13:07:33 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration$1.run(EurekaServerInitializerConfiguration.java:74) - Started Eureka Server
2019-10-14 13:07:33 INFO  [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage(ConditionEvaluationReportLoggingListener.java:136) - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-10-14 13:07:33 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:65) - Unregistering application UNKNOWN with eureka with status DOWN
2019-10-14 13:07:33 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.shutdown(DefaultEurekaServerContext.java:76) - Shutting down ...
2019-10-14 13:07:33 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.shutdown(DefaultEurekaServerContext.java:79) - Shut down
2019-10-14 13:07:33 INFO  [main] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.shutdown(ExecutorConfigurationSupport.java:208) - Shutting down ExecutorService 'applicationTaskExecutor'
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:906) - Shutting down DiscoveryClient ...
2019-10-14 13:07:33 INFO  [main] com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:929) - Completed shut down of DiscoveryClient
2019-10-14 13:07:33 ERROR [main] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:40) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 1110 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 1110, or configure this application to listen on another port.

2019-10-14 13:07:57 INFO  [background-preinit] org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) - HV000001: Hibernate Validator 6.0.17.Final
2019-10-14 13:07:57 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$60bafb84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:07:57 INFO  [main] org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:648) - No active profile set, falling back to default profiles: default
2019-10-14 13:07:58 WARN  [main] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:131) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-10-14 13:07:58 INFO  [main] org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=11fa40f2-1067-366d-93b8-d86320dec99e
2019-10-14 13:07:58 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$60bafb84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:07:58 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 1110 (http)
2019-10-14 13:07:58 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 967 ms
2019-10-14 13:07:58 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:07:58 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:07:58 INFO  [main] com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@59901c4d
2019-10-14 13:07:59 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2019-10-14 13:07:59 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2019-10-14 13:07:59 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2019-10-14 13:07:59 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2019-10-14 13:07:59 WARN  [main] org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120) - No spring.application.name found, defaulting to 'application'
2019-10-14 13:07:59 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:07:59 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:08:00 INFO  [main] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
2019-10-14 13:08:00 INFO  [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
2019-10-14 13:08:00 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:365) - Initializing Eureka in region us-east-1
2019-10-14 13:08:00 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:368) - Client configured to neither register nor query for data.
2019-10-14 13:08:00 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:381) - Discovery Client initialized at timestamp 1571029680532 with initial instances count: 0
2019-10-14 13:08:00 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:63) - Initializing ...
2019-10-14 13:08:00 WARN  [main] com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:155) - The replica size seems to be empty. Check the route 53 DNS Registry
2019-10-14 13:08:00 INFO  [main] com.netflix.eureka.registry.AbstractInstanceRegistry.initRemoteRegionRegistry(AbstractInstanceRegistry.java:151) - Finished initializing remote region registries. All known remote regions: []
2019-10-14 13:08:00 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:70) - Initialized
2019-10-14 13:08:00 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-10-14 13:08:00 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UNKNOWN with eureka with status UP
2019-10-14 13:08:00 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:110) - Setting the eureka configuration..
2019-10-14 13:08:00 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:115) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019-10-14 13:08:00 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:129) - Eureka environment value eureka.environment is not set, defaulting to test
2019-10-14 13:08:00 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:188) - isAws returned false
2019-10-14 13:08:00 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:153) - Initialized server context
2019-10-14 13:08:00 INFO  [Thread-17] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:241) - Got 1 instances from neighboring DS node
2019-10-14 13:08:00 INFO  [Thread-17] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:242) - Renew threshold is: 1
2019-10-14 13:08:00 INFO  [Thread-17] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:253) - Changing status to UP
2019-10-14 13:08:00 INFO  [Thread-17] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration$1.run(EurekaServerInitializerConfiguration.java:74) - Started Eureka Server
2019-10-14 13:08:00 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 1110 (http) with context path ''
2019-10-14 13:08:00 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:145) - Updating port to 1110
2019-10-14 13:08:00 INFO  [main] org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started CommonApplication in 3.822 seconds (JVM running for 4.532)
2019-10-14 13:08:01 INFO  [RMI TCP Connection(3)-10.80.10.149] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2019-10-14 13:08:01 INFO  [RMI TCP Connection(3)-10.80.10.149] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 5 ms
2019-10-14 13:08:23 INFO  [http-nio-1110-exec-3] com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:266) - Registered instance SERVICE/wlh:service:1112 with status UP (replication=false)
2019-10-14 13:08:29 INFO  [http-nio-1110-exec-6] com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:266) - Registered instance CLIENT/wlh:client:1111 with status UP (replication=false)
2019-10-14 13:09:00 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
2019-10-14 13:10:00 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
2019-10-14 13:11:00 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
2019-10-14 13:13:55 INFO  [background-preinit] org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) - HV000001: Hibernate Validator 6.0.17.Final
2019-10-14 13:13:55 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$53f8d51c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:13:56 INFO  [main] org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:648) - No active profile set, falling back to default profiles: default
2019-10-14 13:13:56 WARN  [main] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:131) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-10-14 13:13:56 INFO  [main] org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=11fa40f2-1067-366d-93b8-d86320dec99e
2019-10-14 13:13:56 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$53f8d51c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:13:56 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 1110 (http)
2019-10-14 13:13:57 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 982 ms
2019-10-14 13:13:57 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:13:57 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:13:57 INFO  [main] com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7e2c64
2019-10-14 13:13:57 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2019-10-14 13:13:57 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2019-10-14 13:13:57 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2019-10-14 13:13:57 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2019-10-14 13:13:58 WARN  [main] org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120) - No spring.application.name found, defaulting to 'application'
2019-10-14 13:13:58 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:13:58 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:13:58 INFO  [main] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
2019-10-14 13:13:58 INFO  [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
2019-10-14 13:13:58 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:365) - Initializing Eureka in region us-east-1
2019-10-14 13:13:58 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:368) - Client configured to neither register nor query for data.
2019-10-14 13:13:58 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:381) - Discovery Client initialized at timestamp 1571030038688 with initial instances count: 0
2019-10-14 13:13:58 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:63) - Initializing ...
2019-10-14 13:13:58 WARN  [main] com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:155) - The replica size seems to be empty. Check the route 53 DNS Registry
2019-10-14 13:13:58 INFO  [main] com.netflix.eureka.registry.AbstractInstanceRegistry.initRemoteRegionRegistry(AbstractInstanceRegistry.java:151) - Finished initializing remote region registries. All known remote regions: []
2019-10-14 13:13:58 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:70) - Initialized
2019-10-14 13:13:58 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-10-14 13:13:58 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UNKNOWN with eureka with status UP
2019-10-14 13:13:58 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:110) - Setting the eureka configuration..
2019-10-14 13:13:58 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:115) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019-10-14 13:13:58 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:129) - Eureka environment value eureka.environment is not set, defaulting to test
2019-10-14 13:13:58 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:188) - isAws returned false
2019-10-14 13:13:58 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:153) - Initialized server context
2019-10-14 13:13:58 INFO  [Thread-18] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:241) - Got 1 instances from neighboring DS node
2019-10-14 13:13:58 INFO  [Thread-18] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:242) - Renew threshold is: 1
2019-10-14 13:13:58 INFO  [Thread-18] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:253) - Changing status to UP
2019-10-14 13:13:58 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration$1.run(EurekaServerInitializerConfiguration.java:74) - Started Eureka Server
2019-10-14 13:13:58 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 1110 (http) with context path ''
2019-10-14 13:13:58 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:145) - Updating port to 1110
2019-10-14 13:13:58 INFO  [main] org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started CommonApplication in 3.844 seconds (JVM running for 4.54)
2019-10-14 13:13:59 INFO  [RMI TCP Connection(1)-10.80.10.149] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2019-10-14 13:13:59 INFO  [RMI TCP Connection(1)-10.80.10.149] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 5 ms
2019-10-14 13:13:59 WARN  [http-nio-1110-exec-1] com.netflix.eureka.registry.AbstractInstanceRegistry.renew(AbstractInstanceRegistry.java:353) - DS: Registry: lease doesn't exist, registering resource: SERVICE - wlh:service:1112
2019-10-14 13:13:59 WARN  [http-nio-1110-exec-1] com.netflix.eureka.resources.InstanceResource.renewLease(InstanceResource.java:116) - Not Found (Renew): SERVICE - wlh:service:1112
2019-10-14 13:13:59 INFO  [http-nio-1110-exec-3] com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:266) - Registered instance SERVICE/wlh:service:1112 with status UP (replication=false)
2019-10-14 13:14:05 INFO  [http-nio-1110-exec-7] com.netflix.eureka.registry.AbstractInstanceRegistry.register(AbstractInstanceRegistry.java:266) - Registered instance SERVICE/wlh:service:1112 with status UP (replication=false)
2019-10-14 13:14:58 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
2019-10-14 13:15:58 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
2019-10-14 13:16:27 INFO  [background-preinit] org.hibernate.validator.internal.util.Version.<clinit>(Version.java:21) - HV000001: Hibernate Validator 6.0.17.Final
2019-10-14 13:16:28 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1e743ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:16:28 INFO  [main] org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:648) - No active profile set, falling back to default profiles: default
2019-10-14 13:16:29 WARN  [main] org.springframework.boot.actuate.endpoint.EndpointId.logWarning(EndpointId.java:131) - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2019-10-14 13:16:29 INFO  [main] org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:295) - BeanFactory id=11fa40f2-1067-366d-93b8-d86320dec99e
2019-10-14 13:16:29 INFO  [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:330) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d1e743ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-10-14 13:16:29 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:90) - Tomcat initialized with port(s): 1110 (http)
2019-10-14 13:16:29 INFO  [main] org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext(ServletWebServerApplicationContext.java:284) - Root WebApplicationContext: initialization completed in 996 ms
2019-10-14 13:16:29 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:16:29 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:16:29 INFO  [main] com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3a543f31
2019-10-14 13:16:30 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2019-10-14 13:16:30 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2019-10-14 13:16:30 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2019-10-14 13:16:30 INFO  [main] com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2019-10-14 13:16:30 WARN  [main] org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:120) - No spring.application.name found, defaulting to 'application'
2019-10-14 13:16:30 WARN  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2019-10-14 13:16:30 INFO  [main] com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-10-14 13:16:30 INFO  [main] org.springframework.scheduling.concurrent.ExecutorConfigurationSupport.initialize(ExecutorConfigurationSupport.java:171) - Initializing ExecutorService 'applicationTaskExecutor'
2019-10-14 13:16:31 INFO  [main] org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:72) - Setting initial instance status as: STARTING
2019-10-14 13:16:31 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:365) - Initializing Eureka in region us-east-1
2019-10-14 13:16:31 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:368) - Client configured to neither register nor query for data.
2019-10-14 13:16:31 INFO  [main] com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:381) - Discovery Client initialized at timestamp 1571030191322 with initial instances count: 0
2019-10-14 13:16:31 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:63) - Initializing ...
2019-10-14 13:16:31 WARN  [main] com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:155) - The replica size seems to be empty. Check the route 53 DNS Registry
2019-10-14 13:16:31 INFO  [main] com.netflix.eureka.registry.AbstractInstanceRegistry.initRemoteRegionRegistry(AbstractInstanceRegistry.java:151) - Finished initializing remote region registries. All known remote regions: []
2019-10-14 13:16:31 INFO  [main] com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:70) - Initialized
2019-10-14 13:16:31 INFO  [main] org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>(EndpointLinksResolver.java:58) - Exposing 2 endpoint(s) beneath base path '/actuator'
2019-10-14 13:16:31 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:41) - Registering application UNKNOWN with eureka with status UP
2019-10-14 13:16:31 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:110) - Setting the eureka configuration..
2019-10-14 13:16:31 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:115) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019-10-14 13:16:31 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:129) - Eureka environment value eureka.environment is not set, defaulting to test
2019-10-14 13:16:31 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:188) - isAws returned false
2019-10-14 13:16:31 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:153) - Initialized server context
2019-10-14 13:16:31 INFO  [Thread-18] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:241) - Got 1 instances from neighboring DS node
2019-10-14 13:16:31 INFO  [Thread-18] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:242) - Renew threshold is: 1
2019-10-14 13:16:31 INFO  [Thread-18] com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.openForTraffic(PeerAwareInstanceRegistryImpl.java:253) - Changing status to UP
2019-10-14 13:16:31 INFO  [Thread-18] org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration$1.run(EurekaServerInitializerConfiguration.java:74) - Started Eureka Server
2019-10-14 13:16:31 INFO  [main] org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:202) - Tomcat started on port(s): 1110 (http) with context path ''
2019-10-14 13:16:31 INFO  [main] org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:145) - Updating port to 1110
2019-10-14 13:16:31 INFO  [main] org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:59) - Started CommonApplication in 3.808 seconds (JVM running for 4.48)
2019-10-14 13:16:32 INFO  [RMI TCP Connection(1)-10.80.10.149] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:525) - Initializing Servlet 'dispatcherServlet'
2019-10-14 13:16:32 INFO  [RMI TCP Connection(1)-10.80.10.149] org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:547) - Completed initialization in 6 ms
2019-10-14 13:17:31 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
2019-10-14 13:18:31 INFO  [Eureka-EvictionTimer] com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask.run(AbstractInstanceRegistry.java:1250) - Running the evict task with compensationTime 0ms
